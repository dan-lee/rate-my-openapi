name: Release
on:
  push:
    tags:
      - v*

env:
  GCP_PROJECT_ID: zuplo-production

# Only run one set of tests against a single branch, if another one is in
# progress just kill it and move to the latest commit
concurrency:
  group: "release @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  release:
    name: Build & Push Images
    runs-on: ubuntu-latest-4-cores
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - uses: actions/checkout@v3
      - id: "auth-gcp"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ vars.GCP_ACTIONS_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_ACTIONS_SERVICE_ACCOUNT }}

      - run: node ./scripts/set-versions.js ${{ github.ref }}

      - name: Login to Google Registry
        uses: docker/login-action@v2
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth-gcp.outputs.access_token }}

      # - name: Log in to Github Registry
      #   uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GH_CUSTOM_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            us-docker.pkg.dev/zuplo-production/docker-registry/${{ inputs.app }}
          # ghcr.io/zuplo/${{ inputs.app }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=sha,format=long

      - name: Build and Push Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ inputs.file }}
          platforms: linux/amd64
          push: true
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_AUTH_TOKEN=${{ secrets.GH_NPM_PACKAGE_READ_TOKEN }}
